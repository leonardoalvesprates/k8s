cluster: 
  name: "lprates-lab"

cloudprovider: "amazonec2"

cloudCredentialSecretName: "cattle-global-data:cc-cprvh"

kubernetesVersion: "v1.24.9+rke2r2"

# Specify nodepool options. Can add multiple node groups, specify etcd, controlplane and worker roles.
nodepools:
- etcd: true
  controlplane: true
  worker: true

  # specify node labels
  labels: {}

  # specify node taints
  taints: {}

  # specify nodepool size
  quantity: 1

  # Pause node pool
  paused: false

  # specify displayName
  displayName: "lprates-lab"

  # specify rolling update mechanism
  # rollingUpdate:
  #   The maximum number of machines that can be unavailable during the update.
  #   Value can be an absolute number (ex: 5) or a percentage of desired
  #   machines (ex: 10%).
  #   Absolute number is calculated from percentage by rounding down.
  #   This can not be 0 if MaxSurge is 0.
  #   Defaults to 0.
  #   Example: when this is set to 30%, the old MachineSet can be scaled
  #   down to 70% of desired machines immediately when the rolling update
  #   starts. Once new machines are ready, old MachineSet can be scaled
  #   down further, followed by scaling up the new MachineSet, ensuring
  #   that the total number of machines available at all times
  #   during the update is at least 70% of desired machines.
  #   maxUnavailable: "5"
  #   The maximum number of machines that can be scheduled above the
  #   desired number of machines.
  #   Value can be an absolute number (ex: 5) or a percentage of
  #   desired machines (ex: 10%).
  #   This can not be 0 if MaxUnavailable is 0.
  #   Absolute number is calculated from percentage by rounding up.
  #   Defaults to 1.
  #   Example: when this is set to 30%, the new MachineSet can be scaled
  #   up immediately when the rolling update starts, such that the total
  #   number of old and new machines do not exceed 130% of desired
  #   machines. Once old machines have been killed, new MachineSet can
  #   be scaled up further, ensuring that total number of machines running
  #   at any time during the update is at most 130% of desired machines.
  #   maxSurge: "1"

  # specify machineDeployment Labels
  # machineDeploymentLabels: {}

  # specify machineDeployment annotations
  # machineDeploymentAnnotations: {}

  # specify nodepool name
  name: "ec2"

  # AWS machine image
  ami: "ami-09cd747c78a9add63"

  # AWS spot instance duration in minutes (60, 120, 180, 240, 300, or 360)
  # blockDurationMinutes: 0

  # AWS root device name
  # deviceName: "/dev/sda1"

  # Encrypt the EBS volume using the AWS Managed CMK
  encryptEbsVolume: false
  
  # Optional endpoint URL (hostname only or fully qualified)
  # endpoint: "lab-cluster.prateslabs.com.br"

  # AWS IAM Instance Profile
  iamInstanceProfile: "rk-all-role"

  # Disable SSL when sending requests
  insecureTransport: false

  # AWS instance type
  instanceType: "t3a.large"

  # AWS region
  region: "us-east-1"

  # Whether to create `rancher-node` security group. If false, can provide with existing security group
  createSecurityGroup: true
  # createSecurityGroup: false
  #securityGroups: [all-open]

  # AWS keypair to use
  #keypairName: ""

  # Skip adding default rules to security groups
  securityGroupReadonly: false

  # File contents for sshKeyContents
  #sshKeyContents: ""

  # AWS VPC subnet id
  subnetId: "subnet-ab21ac85"

  # Set this flag to enable CloudWatch monitoring
  monitoring: false

  # Make the specified port number accessible from the Internet
  # openPort: ["8080", "8443"]

  # Only use a private IP address
  privateAddressOnly: false

  # Set this flag to request spot instance
  requestSpotInstance: false

  # AWS Tags (e.g. key1,value1,key2,value2)
  # tags: "foo,bar"
  tags: "Owner,lprates"

  # Set retry count for recoverable failures (use -1 to disable)
  # retries: 5

  # AWS root disk size (in GB)
  # rootSize: 50

  # AWS spot instance bid price (in dollar)
  #spotPrice: 0.5

  # Set the name of the ssh user
  sshUser: ubuntu

  # Amazon EBS volume type
  volumeType: gp2

  # AWS VPC id
  vpcId: "vpc-e23ae898"

  # Create an EBS optimized instance
  useEbsOptimizedInstance: false

  # Force the usage of private IP address
  usePrivateAddress: false

  # File contents for userdata
  userdata: ""

  # AWS zone for instance (i.e. a,b,c,d,e)
  zone: a

rke:
  localClusterAuthEndpoint:
    enabled: true
    fqdn: lab.prateslabs.com.br

